/**
 * Cliente para testar o servidor WebSocket m√≠nimo
 */
import WebSocket from 'ws';

const WS_URL = 'ws://localhost:3002/ws';

console.log('üß™ Testando servidor WebSocket m√≠nimo...');
console.log(`üì° Conectando em: ${WS_URL}`);

const ws = new WebSocket(WS_URL);

ws.on('open', function() {
    console.log('‚úÖ Conectado ao servidor m√≠nimo!');
    
    // Envia ping
    console.log('üì§ Enviando ping...');
    ws.send(JSON.stringify({
        type: 'ping',
        messageId: 'test_ping_' + Date.now(),
        timestamp: new Date().toISOString()
    }));
    
    // Envia mensagem de chat ap√≥s 1 segundo
    setTimeout(() => {
        console.log('üì§ Enviando mensagem de chat...');
        ws.send(JSON.stringify({
            type: 'chat',
            messageId: 'test_chat_' + Date.now(),
            content: 'Teste do servidor m√≠nimo',
            timestamp: new Date().toISOString()
        }));
    }, 1000);
});

ws.on('message', function(data) {
    console.log('üì• RESPOSTA RECEBIDA:', data.toString());
    
    try {
        const message = JSON.parse(data.toString());
        console.log('üìã RESPOSTA PARSEADA:', message);
    } catch (error) {
        console.log('‚ö†Ô∏è Erro ao parsear resposta:', error.message);
    }
});

ws.on('close', function(code, reason) {
    console.log(`üîå Conex√£o fechada: ${code} - ${reason}`);
    process.exit(0);
});

ws.on('error', function(error) {
    console.error('‚ùå Erro na conex√£o:', error.message);
    process.exit(1);
});

// Encerra teste ap√≥s 5 segundos
setTimeout(() => {
    console.log('‚è∞ Encerrando teste...');
    ws.close();
}, 5000);